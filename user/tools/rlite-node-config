#!/usr/bin/env python

import subprocess
import argparse
import time
import re
import os


description = "Simple configuration tool for rlite"
epilog = "2017 Vincenzo Maffione <v.maffione@gmail.com>"

argparser = argparse.ArgumentParser(description = description,
                                    epilog = epilog)
argparser.add_argument('-s', '--script',
                       help = "Path of the script file to be run",
                       type = str, default = '/etc/rina/initscript')

args = argparser.parse_args()

usock = '/var/run/rlite/uipcp-server'
if not os.path.exists(usock):
    print("Cannot stat %s: please check that rlite-uipcps is running" % (usock,))
    quit()

try:
    fin = open(args.script, "r")
except:
    print("Failed to open script file %s" % args.script)
    quit()

cmds = [(0, ['reset'])] # always start from a reset to remove all the IPCPs
enrolls = []

linecnt = 0
while 1:
    line = fin.readline()
    if line == "":
        break
    linecnt += 1

    line = line.replace('\n', '').strip()
    if line.startswith("#"):
        continue

    splitted = line.split()
    if splitted[0] == 'ipcp-enroll':
        enrolls.append((linecnt, splitted))
    else:
        cmds.append((linecnt, splitted))

fin.close()

for cmd in cmds:
    cmdargs = ['rlite-ctl'] + cmd[1]
    try:
        subprocess.check_output(cmdargs, stderr = subprocess.STDOUT)
    except Exception as e:
        o = str(e.output)
        o = o.strip()
        print("Failure at %s:%s --> %s" % (args.script, cmd[0], o))
        quit()
    print('executed %s' % ' '.join(cmdargs))

i = 1
n = len(enrolls)
for cmd in enrolls:
    cmdargs = ['rlite-ctl'] + cmd[1]
    while 1:
        try:
            subprocess.check_output(cmdargs, stderr = subprocess.STDOUT)
            break
        except Exception as e:
            o = str(e.output)
            o = o.strip()
            print("Enrollment at %s:%s failed (%d/%d) --> %s" % (args.script, cmd[0], i, n, o))
            time.sleep(3)
    print('executed %s' % ' '.join(cmdargs))

    print('Enrollment %d/%d successfully completed' % (i, n))
    i += 1
